---
name: test
on:
  pull_request:
  # push:
  # branches:
  #   - main
  # tags:
  #   - v*
  workflow_dispatch:
  workflow_call:
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  AQUA_LOG_LEVEL: debug
  AQUA_OPTS: ''
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - name: aqua-install
        run: |
          curl -sSfL https://raw.githubusercontent.com/aquaproj/aqua-installer/v1.1.2/aqua-installer | bash -s -- -i /usr/local/bin/aqua
          echo "${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin" >> $GITHUB_PATH
          [[ -e "${AQUA_CONFIG}" ]] && echo "✅ AQUA_CONFIG: ${AQUA_CONFIG} exists" ||  echo "::error ❗ unable to validate the target file: ${AQUA_CONFIG} exists"
          aqua install
        env:
          AQUA_CONFIG: aqua.ci.yaml
          AQUA_LOG_LEVEL: debug
          AQUA_OPTS: '-l'
      - name: env-config-go
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ${HOME}/.cache/go-build
            ${HOME}/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: mage-init
        run: |
          # echo "${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:${PATH}"
          mage init

      - name: mage-gotestsum
        run: |
          # echo "${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:${PATH}"
          mage go:testsum ./...
        env:
          # Race conditions will be hit due to the cli driven tasks and binaries being called.
          GOTEST_DISABLE_RACE: 1
      - name: Upload coverage reports to Codecov
        run: |
          # curl -Os https://uploader.codecov.io/latest/linux/codecov
          # chmod +x codecov
          # ./codecov -t ${CODECOV_TOKEN}
          # improved codecov with signature verification
          curl https://uploader.codecov.io/verification.gpg | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}
